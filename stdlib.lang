let identity = fn(x: T) { x }

let map = fn (coll: list[T], func: (T) -> R) {
    let i = 0
    let result: list[R] = []

    while(lt(i, lsize(coll)), {
        result = push(result, func(lget(coll, i)))
        i = add(i, 1)
    })

    result
}

let filter = fn (coll: list[T], func: (T) -> bool) {
    let i = 0
    let result: list[T] = []

    while(lt(i, lsize(coll)), {
        let item = lget(coll, i)
        if(func(item), {
           result = push(result, item)
           nil
        }, nil)
        i = add(i, 1)
    })

    result
}
